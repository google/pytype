import __future__
import attr._make
import attr.exceptions
from typing import Any, Type, TypeVar

AttrsAttributeNotFoundError: Type[attr.exceptions.AttrsAttributeNotFoundError]
NOTHING: attr._make._Nothing
absolute_import: __future__._Feature
copy: module
division: __future__._Feature
print_function: __future__._Feature

_T0 = TypeVar('_T0')

def _asdict_anything(val, filter, dict_factory, retain_collection_types) -> Any: ...
def _obj_setattr(self: object, name, value) -> None: ...
def asdict(inst, recurse = ..., filter = ..., dict_factory = ..., retain_collection_types = ...) -> Any: ...
def assoc(inst: _T0, **changes) -> _T0: ...
def astuple(inst, recurse = ..., filter = ..., tuple_factory = ..., retain_collection_types = ...) -> Any: ...
def evolve(inst, **changes) -> Any: ...
def fields(cls) -> Any: ...
def has(cls) -> bool: ...
def iteritems(d) -> Any: ...
